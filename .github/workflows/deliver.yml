name: deliver

on: [push, pull_request] # TODO: Only development and version tags

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Get startup date
      id: datetime
      run: echo "::set-output name=year_week::$(date -u +'%Y-%U')"

    - name: Git checkout
      uses: actions/checkout@v2

    - name: Set up Docker images cache
      id: docker_cache
      uses: actions/cache@v2
      with:
        path: .github/.docker-cache
        key: ${{ runner.os }}-docker-${{ steps.datetime.outputs.year_week }}-${{ hashFiles('**/package-lock.json', '**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-docker-${{ steps.datetime.outputs.year_week }}

    - name: Load Docker cache (if cache was hit)
      if: steps.docker_cache.outputs.cache-hit == 'true'
      run: docker load -i .github/.docker-cache/images.tar

    - name: Build the Docker image
      run: docker build . -t sfgrp/taxonworks --build-arg REVISION=$(echo $GITHUB_SHA | cut -c1-9) --build-arg BUNDLER_WORKERS=3

    - name: Run image tests
      run: .github/docker-tests/test.sh

    # TODO: Wait here for build workflow to finish successfully, fail here otherwise.

    # TODO: Deliver image to DockerHub (set up secrets also). Don't deliver on pull request.

    - name: Save Docker cache (if cached was NOT hit)
      if: steps.docker_cache.outputs.cache-hit != 'true'
      run: docker save -o .github/.docker-cache/images.tar $(docker history -q sfgrp/taxonworks | grep -v '^<missing>')
