name: build

on: [push, pull_request]

jobs:
  build:
    env:
      PGHOST: 127.0.0.1
      PGUSER: postgres
      RAILS_ENV: test

    runs-on: ubuntu-latest
    strategy:
      matrix:
        worker: [0, 1]

    services:
      db:
        image: postgis/postgis:12-3.0
        ports: ['5432:5432']
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Get startup date
      id: datetime
      run: echo "::set-output name=iso_date::$(date --iso-8601 -u)"

    - name: Git checkout
      uses: actions/checkout@v2
    
    - name: Set up Ruby 2.7
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.7
        
    - name: Set up Ruby Bundler gems cache
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-rev2-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-rev2

    - name: Set up Node 10
      uses: actions/setup-node@v1
      with:
        node-version: '10'

    - name: Set up Node packages cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.npm
          **/node_modules
        key: ${{ runner.os }}-node-rev2-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-rev2

    - name: Set up assets cache
      uses: actions/cache@v2
      with:
        path: |
          tmp/cache/webpacker
          public/assets
          public/packs-test
        key: ${{ runner.os }}-assets-${{ steps.datetime.outputs.iso_date }}

    - name: Set up VCR cache
      uses: actions/cache@v2
      with:
        path: spec/fixtures/vcr_cassettes
        key: ${{ runner.os }}-vcr-${{ steps.datetime.outputs.iso_date }}-${{ matrix.worker }}

    - name: Install apt packages
      run: |
        sudo apt-get update
        sudo apt-get install -y imagemagick tesseract-ocr libgeos-dev libproj-dev

    - name: Set up TaxonWorks config files
      run: |
        cp config/application_settings.yml.ci config/application_settings.yml
        cp config/secrets.yml.example config/secrets.yml
        cp config/database.yml.ci config/database.yml
    
    - name: Install Ruby gems
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Install Node packages
      run: |
        npm install
        
    - name: Set up database
      run: |
        bundle exec rails db:create
        bundle exec rails db:migrate
        
    - name: Precompile assets
      run: bundle exec rails assets:precompile
        
    - name: Run tests
      env:
        TEST_WORKER: ${{ matrix.worker }}
        TEST_WORKERS: 2
      run: .github/spec_runner.sh
